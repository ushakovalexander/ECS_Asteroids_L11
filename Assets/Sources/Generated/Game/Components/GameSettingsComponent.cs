//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity settingsEntity { get { return GetGroup(GameMatcher.Settings).GetSingleEntity(); } }
    public SettingsComponent settings { get { return settingsEntity.settings; } }
    public bool hasSettings { get { return settingsEntity != null; } }

    public GameEntity SetSettings(Settings newValue) {
        if (hasSettings) {
            throw new Entitas.EntitasException("Could not set Settings!\n" + this + " already has an entity with SettingsComponent!",
                "You should check if the context already has a settingsEntity before setting it or use context.ReplaceSettings().");
        }
        var entity = CreateEntity();
        entity.AddSettings(newValue);
        return entity;
    }

    public void ReplaceSettings(Settings newValue) {
        var entity = settingsEntity;
        if (entity == null) {
            entity = SetSettings(newValue);
        } else {
            entity.ReplaceSettings(newValue);
        }
    }

    public void RemoveSettings() {
        settingsEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SettingsComponent settings { get { return (SettingsComponent)GetComponent(GameComponentsLookup.Settings); } }
    public bool hasSettings { get { return HasComponent(GameComponentsLookup.Settings); } }

    public void AddSettings(Settings newValue) {
        var index = GameComponentsLookup.Settings;
        var component = CreateComponent<SettingsComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSettings(Settings newValue) {
        var index = GameComponentsLookup.Settings;
        var component = CreateComponent<SettingsComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSettings() {
        RemoveComponent(GameComponentsLookup.Settings);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSettings;

    public static Entitas.IMatcher<GameEntity> Settings {
        get {
            if (_matcherSettings == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Settings);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSettings = matcher;
            }

            return _matcherSettings;
        }
    }
}
